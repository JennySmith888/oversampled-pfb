// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _polyphase_filter_HH_
#define _polyphase_filter_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "os_pfb_faddfsub_3g8j.h"
#include "os_pfb_fadd_32ns_hbi.h"
#include "os_pfb_fmul_32ns_ibs.h"
#include "polyphase_filter_bkb.h"
#include "polyphase_filter_h.h"
#include "polyphase_filter_dEe.h"
#include "polyphase_filter_eOg.h"

namespace ap_rtl {

struct polyphase_filter : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<64> > in_r_TDATA;
    sc_in< sc_logic > in_r_TVALID;
    sc_out< sc_logic > in_r_TREADY;
    sc_out< sc_lv<64> > filter_out_din;
    sc_in< sc_logic > filter_out_full_n;
    sc_out< sc_logic > filter_out_write;
    sc_out< sc_lv<8> > ifft_config_data_V_din;
    sc_in< sc_logic > ifft_config_data_V_full_n;
    sc_out< sc_logic > ifft_config_data_V_write;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const1;


    // Module declarations
    polyphase_filter(sc_module_name name);
    SC_HAS_PROCESS(polyphase_filter);

    ~polyphase_filter();

    sc_trace_file* mVcdFile;

    polyphase_filter_bkb* filter_state_M_real_U;
    polyphase_filter_bkb* filter_state_M_imag_U;
    polyphase_filter_h* h_U;
    polyphase_filter_dEe* shift_states_U;
    polyphase_filter_eOg* temp_M_real_U;
    polyphase_filter_eOg* temp_M_imag_U;
    os_pfb_faddfsub_3g8j<1,4,32,32,32>* os_pfb_faddfsub_3g8j_U1;
    os_pfb_fadd_32ns_hbi<1,4,32,32,32>* os_pfb_fadd_32ns_hbi_U2;
    os_pfb_fmul_32ns_ibs<1,2,32,32,32>* os_pfb_fmul_32ns_ibs_U3;
    os_pfb_fmul_32ns_ibs<1,2,32,32,32>* os_pfb_fmul_32ns_ibs_U4;
    os_pfb_fmul_32ns_ibs<1,2,32,32,32>* os_pfb_fmul_32ns_ibs_U5;
    os_pfb_fmul_32ns_ibs<1,2,32,32,32>* os_pfb_fmul_32ns_ibs_U6;
    regslice_both<64>* regslice_both_in_r_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<19> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_lv<8> > filter_state_M_real_address0;
    sc_signal< sc_logic > filter_state_M_real_ce0;
    sc_signal< sc_logic > filter_state_M_real_we0;
    sc_signal< sc_lv<32> > filter_state_M_real_d0;
    sc_signal< sc_lv<32> > filter_state_M_real_q0;
    sc_signal< sc_lv<8> > filter_state_M_imag_address0;
    sc_signal< sc_logic > filter_state_M_imag_ce0;
    sc_signal< sc_logic > filter_state_M_imag_we0;
    sc_signal< sc_lv<32> > filter_state_M_imag_d0;
    sc_signal< sc_lv<32> > filter_state_M_imag_q0;
    sc_signal< sc_lv<8> > h_address0;
    sc_signal< sc_logic > h_ce0;
    sc_signal< sc_lv<32> > h_q0;
    sc_signal< sc_lv<4> > state_idx;
    sc_signal< sc_lv<2> > shift_states_address0;
    sc_signal< sc_logic > shift_states_ce0;
    sc_signal< sc_lv<5> > shift_states_q0;
    sc_signal< sc_logic > in_r_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > tmp_1_fu_452_p3;
    sc_signal< sc_lv<1> > icmp_ln25_fu_465_p2;
    sc_signal< sc_logic > filter_out_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ifft_config_data_V_blk_n;
    sc_signal< sc_lv<5> > add_ln18_fu_397_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<8> > shl_ln_fu_427_p3;
    sc_signal< sc_lv<8> > shl_ln_reg_647;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > tmp_fu_415_p3;
    sc_signal< sc_lv<4> > state_idx_load_reg_652;
    sc_signal< sc_lv<32> > sext_ln22_1_fu_448_p1;
    sc_signal< sc_lv<32> > sext_ln22_1_reg_663;
    sc_signal< bool > ap_predicate_op66_read_state4;
    sc_signal< bool > ap_block_state4;
    sc_signal< sc_lv<1> > icmp_ln25_reg_671;
    sc_signal< sc_lv<64> > zext_ln28_fu_471_p1;
    sc_signal< sc_lv<64> > zext_ln28_reg_675;
    sc_signal< sc_lv<32> > bitcast_ln28_fu_493_p1;
    sc_signal< sc_lv<32> > bitcast_ln28_1_fu_508_p1;
    sc_signal< sc_lv<4> > p_fu_513_p2;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<5> > temp_M_real_addr_2_reg_717;
    sc_signal< sc_lv<5> > temp_M_imag_addr_2_reg_722;
    sc_signal< sc_lv<6> > m_fu_524_p2;
    sc_signal< sc_lv<6> > m_reg_732;
    sc_signal< sc_lv<32> > h_load_reg_737;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > grp_fu_375_p2;
    sc_signal< sc_lv<32> > tmp_i_i_reg_743;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<32> > grp_fu_380_p2;
    sc_signal< sc_lv<32> > tmp_2_i_i_reg_748;
    sc_signal< sc_lv<32> > grp_fu_386_p2;
    sc_signal< sc_lv<32> > tmp_4_i_i_reg_753;
    sc_signal< sc_lv<32> > grp_fu_391_p2;
    sc_signal< sc_lv<32> > tmp_5_i_i_reg_758;
    sc_signal< sc_lv<32> > grp_fu_363_p2;
    sc_signal< sc_lv<32> > complex_M_real_writ_reg_763;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<32> > grp_fu_367_p2;
    sc_signal< sc_lv<32> > complex_M_imag_writ_reg_768;
    sc_signal< sc_lv<32> > temp_M_real_q0;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<32> > temp_M_imag_q0;
    sc_signal< sc_lv<5> > shift_reg_783;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<6> > i_fu_536_p2;
    sc_signal< sc_lv<6> > i_reg_791;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<1> > icmp_ln39_fu_530_p2;
    sc_signal< sc_lv<5> > temp_M_real_address0;
    sc_signal< sc_logic > temp_M_real_ce0;
    sc_signal< sc_logic > temp_M_real_we0;
    sc_signal< sc_lv<32> > temp_M_real_d0;
    sc_signal< sc_lv<5> > temp_M_imag_address0;
    sc_signal< sc_logic > temp_M_imag_ce0;
    sc_signal< sc_logic > temp_M_imag_we0;
    sc_signal< sc_lv<32> > temp_M_imag_d0;
    sc_signal< sc_lv<5> > phi_ln18_reg_297;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > icmp_ln18_fu_409_p2;
    sc_signal< sc_lv<4> > p_0_reg_308;
    sc_signal< sc_lv<6> > m_0_reg_320;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<32> > p_r_M_imag_reg_332;
    sc_signal< sc_lv<32> > p_r_M_real_reg_342;
    sc_signal< sc_lv<6> > i_0_reg_352;
    sc_signal< sc_lv<64> > zext_ln18_fu_403_p1;
    sc_signal< sc_lv<64> > sext_ln37_fu_439_p1;
    sc_signal< sc_lv<64> > zext_ln30_fu_483_p1;
    sc_signal< sc_lv<64> > zext_ln32_fu_519_p1;
    sc_signal< sc_lv<64> > zext_ln41_fu_551_p1;
    sc_signal< sc_lv<4> > select_ln43_fu_605_p3;
    sc_signal< sc_lv<32> > grp_fu_363_p0;
    sc_signal< sc_lv<32> > grp_fu_363_p1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > grp_fu_367_p0;
    sc_signal< sc_lv<32> > grp_fu_367_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<3> > trunc_ln23_fu_423_p1;
    sc_signal< sc_lv<4> > sext_ln37_fu_439_p0;
    sc_signal< sc_lv<8> > sext_ln22_fu_444_p1;
    sc_signal< sc_lv<8> > idx_fu_460_p2;
    sc_signal< sc_lv<8> > add_ln30_fu_477_p2;
    sc_signal< sc_lv<32> > trunc_ln28_fu_489_p1;
    sc_signal< sc_lv<32> > in_M_imag_load_new6_fu_498_p4;
    sc_signal< sc_lv<5> > trunc_ln40_fu_542_p1;
    sc_signal< sc_lv<5> > tmpidx_fu_546_p2;
    sc_signal< sc_lv<4> > add_ln43_fu_557_p2;
    sc_signal< sc_lv<2> > trunc_ln43_fu_570_p1;
    sc_signal< sc_lv<2> > trunc_ln43_1_fu_582_p1;
    sc_signal< sc_lv<2> > xor_ln43_fu_585_p2;
    sc_signal< sc_lv<4> > p_and_t_fu_591_p3;
    sc_signal< sc_lv<1> > tmp_2_fu_562_p3;
    sc_signal< sc_lv<4> > sub_ln43_fu_599_p2;
    sc_signal< sc_lv<4> > p_and_f_fu_574_p3;
    sc_signal< sc_lv<32> > bitcast_ln41_1_fu_623_p1;
    sc_signal< sc_lv<32> > bitcast_ln41_fu_619_p1;
    sc_signal< sc_lv<2> > grp_fu_363_opcode;
    sc_signal< sc_lv<19> > ap_NS_fsm;
    sc_signal< sc_logic > regslice_both_in_r_U_apdone_blk;
    sc_signal< sc_lv<64> > in_r_TDATA_int;
    sc_signal< sc_logic > in_r_TVALID_int;
    sc_signal< sc_logic > in_r_TREADY_int;
    sc_signal< sc_logic > regslice_both_in_r_U_ack_in;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<19> ap_ST_fsm_state1;
    static const sc_lv<19> ap_ST_fsm_state2;
    static const sc_lv<19> ap_ST_fsm_state3;
    static const sc_lv<19> ap_ST_fsm_state4;
    static const sc_lv<19> ap_ST_fsm_state5;
    static const sc_lv<19> ap_ST_fsm_state6;
    static const sc_lv<19> ap_ST_fsm_state7;
    static const sc_lv<19> ap_ST_fsm_state8;
    static const sc_lv<19> ap_ST_fsm_state9;
    static const sc_lv<19> ap_ST_fsm_state10;
    static const sc_lv<19> ap_ST_fsm_state11;
    static const sc_lv<19> ap_ST_fsm_state12;
    static const sc_lv<19> ap_ST_fsm_state13;
    static const sc_lv<19> ap_ST_fsm_state14;
    static const sc_lv<19> ap_ST_fsm_state15;
    static const sc_lv<19> ap_ST_fsm_state16;
    static const sc_lv<19> ap_ST_fsm_state17;
    static const sc_lv<19> ap_ST_fsm_state18;
    static const sc_lv<19> ap_ST_fsm_state19;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<4> ap_const_lv4_7;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<6> ap_const_lv6_1F;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<8> ap_const_lv8_18;
    static const sc_lv<8> ap_const_lv8_E8;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<6> ap_const_lv6_3F;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const1();
    void thread_ap_clk_no_reset_();
    void thread_add_ln18_fu_397_p2();
    void thread_add_ln30_fu_477_p2();
    void thread_add_ln43_fu_557_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state1();
    void thread_ap_block_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op66_read_state4();
    void thread_ap_ready();
    void thread_bitcast_ln28_1_fu_508_p1();
    void thread_bitcast_ln28_fu_493_p1();
    void thread_bitcast_ln41_1_fu_623_p1();
    void thread_bitcast_ln41_fu_619_p1();
    void thread_filter_out_blk_n();
    void thread_filter_out_din();
    void thread_filter_out_write();
    void thread_filter_state_M_imag_address0();
    void thread_filter_state_M_imag_ce0();
    void thread_filter_state_M_imag_d0();
    void thread_filter_state_M_imag_we0();
    void thread_filter_state_M_real_address0();
    void thread_filter_state_M_real_ce0();
    void thread_filter_state_M_real_d0();
    void thread_filter_state_M_real_we0();
    void thread_grp_fu_363_opcode();
    void thread_grp_fu_363_p0();
    void thread_grp_fu_363_p1();
    void thread_grp_fu_367_p0();
    void thread_grp_fu_367_p1();
    void thread_h_address0();
    void thread_h_ce0();
    void thread_i_fu_536_p2();
    void thread_icmp_ln18_fu_409_p2();
    void thread_icmp_ln25_fu_465_p2();
    void thread_icmp_ln39_fu_530_p2();
    void thread_idx_fu_460_p2();
    void thread_ifft_config_data_V_blk_n();
    void thread_ifft_config_data_V_din();
    void thread_ifft_config_data_V_write();
    void thread_in_M_imag_load_new6_fu_498_p4();
    void thread_in_r_TDATA_blk_n();
    void thread_in_r_TREADY();
    void thread_in_r_TREADY_int();
    void thread_internal_ap_ready();
    void thread_m_fu_524_p2();
    void thread_p_and_f_fu_574_p3();
    void thread_p_and_t_fu_591_p3();
    void thread_p_fu_513_p2();
    void thread_real_start();
    void thread_select_ln43_fu_605_p3();
    void thread_sext_ln22_1_fu_448_p1();
    void thread_sext_ln22_fu_444_p1();
    void thread_sext_ln37_fu_439_p0();
    void thread_sext_ln37_fu_439_p1();
    void thread_shift_states_address0();
    void thread_shift_states_ce0();
    void thread_shl_ln_fu_427_p3();
    void thread_start_out();
    void thread_start_write();
    void thread_sub_ln43_fu_599_p2();
    void thread_temp_M_imag_address0();
    void thread_temp_M_imag_ce0();
    void thread_temp_M_imag_d0();
    void thread_temp_M_imag_we0();
    void thread_temp_M_real_address0();
    void thread_temp_M_real_ce0();
    void thread_temp_M_real_d0();
    void thread_temp_M_real_we0();
    void thread_tmp_1_fu_452_p3();
    void thread_tmp_2_fu_562_p3();
    void thread_tmp_fu_415_p3();
    void thread_tmpidx_fu_546_p2();
    void thread_trunc_ln23_fu_423_p1();
    void thread_trunc_ln28_fu_489_p1();
    void thread_trunc_ln40_fu_542_p1();
    void thread_trunc_ln43_1_fu_582_p1();
    void thread_trunc_ln43_fu_570_p1();
    void thread_xor_ln43_fu_585_p2();
    void thread_zext_ln18_fu_403_p1();
    void thread_zext_ln28_fu_471_p1();
    void thread_zext_ln30_fu_483_p1();
    void thread_zext_ln32_fu_519_p1();
    void thread_zext_ln41_fu_551_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
