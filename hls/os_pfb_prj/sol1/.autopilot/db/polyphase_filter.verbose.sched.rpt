

================================================================
== Vivado HLS Report for 'polyphase_filter'
================================================================
* Date:           Thu Oct 24 13:28:48 2019

* Version:        2018.3 (Build 2405991 on Thu Dec 06 23:56:15 MST 2018)
* Project:        os_pfb_prj
* Solution:       sol1
* Product family: zynquplus
* Target device:  xczu28dr-ffvg1517-2-e


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.419|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +------+------+------+------+---------+
    |   Latency   |   Interval  | Pipeline|
    |  min |  max |  min |  max |   Type  |
    +------+------+------+------+---------+
    |  3443|  3443|  3443|  3443|   none  |
    +------+------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+------+------+----------+-----------+-----------+------+----------+
        |             |   Latency   | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |  min |  max |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+------+------+----------+-----------+-----------+------+----------+
        |- Loop 1     |    31|    31|         1|          -|          -|    32|    no    |
        |- Loop 2     |  3344|  3344|       418|          -|          -|     8|    no    |
        | + Loop 2.1  |   416|   416|        13|          -|          -|    32|    no    |
        |- Loop 3     |    64|    64|         2|          -|          -|    32|    no    |
        +-------------+------+------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 19
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	2  / (!tmp_1)
	3  / (tmp_1)
3 --> 
	17  / (tmp)
	4  / (!tmp)
4 --> 
	5  / (!tmp_5)
	3  / (tmp_5)
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	4  / true
17 --> 
	18  / true
18 --> 
	19  / (!exitcond)
19 --> 
	18  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.83>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %ifft_config_data_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str84, i32 0, i32 0, [1 x i8]* @p_str85, [1 x i8]* @p_str86, [1 x i8]* @p_str87, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str88, [1 x i8]* @p_str89)"   --->   Operation 20 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %filter_out, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str78, i32 0, i32 0, [1 x i8]* @p_str79, [1 x i8]* @p_str80, [1 x i8]* @p_str81, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str82, [1 x i8]* @p_str83)"   --->   Operation 21 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i64* %in_r, [5 x i8]* @p_str, i32 1, i32 1, [5 x i8]* @p_str1, i32 0, i32 32, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)"   --->   Operation 22 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%temp_M_real = alloca [32 x float], align 4" [os_pfb.cpp:17]   --->   Operation 23 'alloca' 'temp_M_real' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%temp_M_imag = alloca [32 x float], align 4" [os_pfb.cpp:17]   --->   Operation 24 'alloca' 'temp_M_imag' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_1 : Operation 25 [1/1] (1.83ns)   --->   "call void @_ssdm_op_Write.ap_fifo.i8P(i8* %ifft_config_data_V, i8 0)" [/tools/Xilinx/Vivado/2018.3/common/technology/autopilot/hls_fft.h:268->os_pfb.cpp:14]   --->   Operation 25 'write' <Predicate = true> <Delay = 1.83> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 64> <Depth = 1> <FIFO>
ST_1 : Operation 26 [1/1] (0.65ns)   --->   "br label %arrayctor.loop"   --->   Operation 26 'br' <Predicate = true> <Delay = 0.65>

State 2 <SV = 1> <Delay = 1.23>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_8 = phi i5 [ 0, %codeRepl1 ], [ %tmp_9, %arrayctor.loop ]" [os_pfb.cpp:17]   --->   Operation 27 'phi' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.78ns)   --->   "%tmp_9 = add i5 %tmp_8, 1" [os_pfb.cpp:17]   --->   Operation 28 'add' 'tmp_9' <Predicate = true> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_s = zext i5 %tmp_8 to i64" [os_pfb.cpp:17]   --->   Operation 29 'zext' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%temp_M_real_addr = getelementptr [32 x float]* %temp_M_real, i64 0, i64 %tmp_s" [os_pfb.cpp:17]   --->   Operation 30 'getelementptr' 'temp_M_real_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (1.23ns)   --->   "store float 0.000000e+00, float* %temp_M_real_addr, align 8" [os_pfb.cpp:17]   --->   Operation 31 'store' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%temp_M_imag_addr = getelementptr [32 x float]* %temp_M_imag, i64 0, i64 %tmp_s" [os_pfb.cpp:17]   --->   Operation 32 'getelementptr' 'temp_M_imag_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (1.23ns)   --->   "store float 0.000000e+00, float* %temp_M_imag_addr, align 4" [os_pfb.cpp:17]   --->   Operation 33 'store' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_2 : Operation 34 [1/1] (0.75ns)   --->   "%tmp_1 = icmp eq i5 %tmp_8, -1" [os_pfb.cpp:17]   --->   Operation 34 'icmp' 'tmp_1' <Predicate = true> <Delay = 0.75> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32)"   --->   Operation 35 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "br i1 %tmp_1, label %.preheader18.preheader, label %arrayctor.loop" [os_pfb.cpp:17]   --->   Operation 36 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 37 [1/1] (0.65ns)   --->   "br label %.preheader18" [os_pfb.cpp:20]   --->   Operation 37 'br' <Predicate = (tmp_1)> <Delay = 0.65>

State 3 <SV = 2> <Delay = 1.23>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%p = phi i4 [ %p_1, %4 ], [ 7, %.preheader18.preheader ]"   --->   Operation 38 'phi' 'p' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %p, i32 3)" [os_pfb.cpp:20]   --->   Operation 39 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%empty_9 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 8, i64 8, i64 8)"   --->   Operation 40 'speclooptripcount' 'empty_9' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "br i1 %tmp, label %5, label %.preheader.preheader" [os_pfb.cpp:20]   --->   Operation 41 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_2 = trunc i4 %p to i3" [os_pfb.cpp:20]   --->   Operation 42 'trunc' 'tmp_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_3 = call i8 @_ssdm_op_BitConcatenate.i8.i3.i5(i3 %tmp_2, i5 0)" [os_pfb.cpp:22]   --->   Operation 43 'bitconcatenate' 'tmp_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.65ns)   --->   "br label %.preheader" [os_pfb.cpp:21]   --->   Operation 44 'br' <Predicate = (!tmp)> <Delay = 0.65>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%state_idx_load = load i4* @state_idx, align 1"   --->   Operation 45 'load' 'state_idx_load' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%tmp_4 = sext i4 %state_idx_load to i64" [os_pfb.cpp:36]   --->   Operation 46 'sext' 'tmp_4' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%shift_states_addr = getelementptr [4 x i5]* @shift_states, i64 0, i64 %tmp_4" [os_pfb.cpp:36]   --->   Operation 47 'getelementptr' 'shift_states_addr' <Predicate = (tmp)> <Delay = 0.00>
ST_3 : Operation 48 [2/2] (1.23ns)   --->   "%shift = load i5* %shift_states_addr, align 1" [os_pfb.cpp:36]   --->   Operation 48 'load' 'shift' <Predicate = (tmp)> <Delay = 1.23> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 5> <Depth = 4> <ROM>

State 4 <SV = 3> <Delay = 2.76>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%m = phi i6 [ 31, %.preheader.preheader ], [ %m_1, %3 ]"   --->   Operation 49 'phi' 'm' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%m_cast1 = sext i6 %m to i8" [os_pfb.cpp:21]   --->   Operation 50 'sext' 'm_cast1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%m_cast = sext i6 %m to i32" [os_pfb.cpp:21]   --->   Operation 51 'sext' 'm_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i6.i32(i6 %m, i32 5)" [os_pfb.cpp:21]   --->   Operation 52 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%empty_10 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32)"   --->   Operation 53 'speclooptripcount' 'empty_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "br i1 %tmp_5, label %4, label %0" [os_pfb.cpp:21]   --->   Operation 54 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.76ns)   --->   "%idx = add i8 %tmp_3, %m_cast1" [os_pfb.cpp:22]   --->   Operation 55 'add' 'idx' <Predicate = (!tmp_5)> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 56 [1/1] (0.84ns)   --->   "%tmp_6 = icmp ult i8 %idx, 24" [os_pfb.cpp:24]   --->   Operation 56 'icmp' 'tmp_6' <Predicate = (!tmp_5)> <Delay = 0.84> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_7 = zext i8 %idx to i64" [os_pfb.cpp:27]   --->   Operation 57 'zext' 'tmp_7' <Predicate = (!tmp_5)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "br i1 %tmp_6, label %1, label %2" [os_pfb.cpp:24]   --->   Operation 58 'br' <Predicate = (!tmp_5)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.76ns)   --->   "%tmp_13 = add i8 %idx, -24" [os_pfb.cpp:29]   --->   Operation 59 'add' 'tmp_13' <Predicate = (!tmp_5 & !tmp_6)> <Delay = 0.76> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_14 = zext i8 %tmp_13 to i64" [os_pfb.cpp:29]   --->   Operation 60 'zext' 'tmp_14' <Predicate = (!tmp_5 & !tmp_6)> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%filter_state_M_real_3 = getelementptr [256 x float]* @filter_state_M_real, i64 0, i64 %tmp_14" [os_pfb.cpp:29]   --->   Operation 61 'getelementptr' 'filter_state_M_real_3' <Predicate = (!tmp_5 & !tmp_6)> <Delay = 0.00>
ST_4 : Operation 62 [2/2] (1.23ns)   --->   "%filter_state_M_real_4 = load float* %filter_state_M_real_3, align 8" [os_pfb.cpp:29]   --->   Operation 62 'load' 'filter_state_M_real_4' <Predicate = (!tmp_5 & !tmp_6)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%filter_state_M_imag_3 = getelementptr [256 x float]* @filter_state_M_imag, i64 0, i64 %tmp_14" [os_pfb.cpp:29]   --->   Operation 63 'getelementptr' 'filter_state_M_imag_3' <Predicate = (!tmp_5 & !tmp_6)> <Delay = 0.00>
ST_4 : Operation 64 [2/2] (1.23ns)   --->   "%filter_state_M_imag_4 = load float* %filter_state_M_imag_3, align 4" [os_pfb.cpp:29]   --->   Operation 64 'load' 'filter_state_M_imag_4' <Predicate = (!tmp_5 & !tmp_6)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%filter_state_M_real_1 = getelementptr [256 x float]* @filter_state_M_real, i64 0, i64 %tmp_7" [os_pfb.cpp:27]   --->   Operation 65 'getelementptr' 'filter_state_M_real_1' <Predicate = (!tmp_5 & tmp_6)> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%in_read = call i64 @_ssdm_op_Read.axis.volatile.i64P(i64* %in_r)" [os_pfb.cpp:27]   --->   Operation 66 'read' 'in_read' <Predicate = (!tmp_5 & tmp_6)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_21 = trunc i64 %in_read to i32" [os_pfb.cpp:27]   --->   Operation 67 'trunc' 'tmp_21' <Predicate = (!tmp_5 & tmp_6)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%in_M_real_load4 = bitcast i32 %tmp_21 to float" [os_pfb.cpp:27]   --->   Operation 68 'bitcast' 'in_M_real_load4' <Predicate = (!tmp_5 & tmp_6)> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (1.23ns)   --->   "store float %in_M_real_load4, float* %filter_state_M_real_1, align 8" [os_pfb.cpp:27]   --->   Operation 69 'store' <Predicate = (!tmp_5 & tmp_6)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%filter_state_M_imag_1 = getelementptr [256 x float]* @filter_state_M_imag, i64 0, i64 %tmp_7" [os_pfb.cpp:27]   --->   Operation 70 'getelementptr' 'filter_state_M_imag_1' <Predicate = (!tmp_5 & tmp_6)> <Delay = 0.00>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%in_M_imag_load_new6 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %in_read, i32 32, i32 63)" [os_pfb.cpp:27]   --->   Operation 71 'partselect' 'in_M_imag_load_new6' <Predicate = (!tmp_5 & tmp_6)> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%in_M_imag_load8 = bitcast i32 %in_M_imag_load_new6 to float" [os_pfb.cpp:27]   --->   Operation 72 'bitcast' 'in_M_imag_load8' <Predicate = (!tmp_5 & tmp_6)> <Delay = 0.00>
ST_4 : Operation 73 [1/1] (1.23ns)   --->   "store float %in_M_imag_load8, float* %filter_state_M_imag_1, align 4" [os_pfb.cpp:27]   --->   Operation 73 'store' <Predicate = (!tmp_5 & tmp_6)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_4 : Operation 74 [1/1] (0.65ns)   --->   "br label %3" [os_pfb.cpp:28]   --->   Operation 74 'br' <Predicate = (!tmp_5 & tmp_6)> <Delay = 0.65>
ST_4 : Operation 75 [1/1] (0.79ns)   --->   "%p_1 = add i4 %p, -1" [os_pfb.cpp:20]   --->   Operation 75 'add' 'p_1' <Predicate = (tmp_5)> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "br label %.preheader18" [os_pfb.cpp:20]   --->   Operation 76 'br' <Predicate = (tmp_5)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.47>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "%filter_state_M_real_2 = getelementptr [256 x float]* @filter_state_M_real, i64 0, i64 %tmp_7" [os_pfb.cpp:29]   --->   Operation 77 'getelementptr' 'filter_state_M_real_2' <Predicate = (!tmp_6)> <Delay = 0.00>
ST_5 : Operation 78 [1/2] (1.23ns)   --->   "%filter_state_M_real_4 = load float* %filter_state_M_real_3, align 8" [os_pfb.cpp:29]   --->   Operation 78 'load' 'filter_state_M_real_4' <Predicate = (!tmp_6)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_5 : Operation 79 [1/1] (1.23ns)   --->   "store float %filter_state_M_real_4, float* %filter_state_M_real_2, align 8" [os_pfb.cpp:29]   --->   Operation 79 'store' <Predicate = (!tmp_6)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%filter_state_M_imag_2 = getelementptr [256 x float]* @filter_state_M_imag, i64 0, i64 %tmp_7" [os_pfb.cpp:29]   --->   Operation 80 'getelementptr' 'filter_state_M_imag_2' <Predicate = (!tmp_6)> <Delay = 0.00>
ST_5 : Operation 81 [1/2] (1.23ns)   --->   "%filter_state_M_imag_4 = load float* %filter_state_M_imag_3, align 4" [os_pfb.cpp:29]   --->   Operation 81 'load' 'filter_state_M_imag_4' <Predicate = (!tmp_6)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_5 : Operation 82 [1/1] (1.23ns)   --->   "store float %filter_state_M_imag_4, float* %filter_state_M_imag_2, align 4" [os_pfb.cpp:29]   --->   Operation 82 'store' <Predicate = (!tmp_6)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_5 : Operation 83 [1/1] (0.65ns)   --->   "br label %3"   --->   Operation 83 'br' <Predicate = (!tmp_6)> <Delay = 0.65>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_15 = zext i32 %m_cast to i64" [os_pfb.cpp:31]   --->   Operation 84 'zext' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%temp_M_real_addr_2 = getelementptr [32 x float]* %temp_M_real, i64 0, i64 %tmp_15" [os_pfb.cpp:31]   --->   Operation 85 'getelementptr' 'temp_M_real_addr_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (0.00ns)   --->   "%temp_M_imag_addr_2 = getelementptr [32 x float]* %temp_M_imag, i64 0, i64 %tmp_15" [os_pfb.cpp:31]   --->   Operation 86 'getelementptr' 'temp_M_imag_addr_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%h_addr = getelementptr inbounds [256 x float]* @h, i64 0, i64 %tmp_7" [os_pfb.cpp:31]   --->   Operation 87 'getelementptr' 'h_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 88 [2/2] (1.23ns)   --->   "%h_load = load float* %h_addr, align 4" [os_pfb.cpp:31]   --->   Operation 88 'load' 'h_load' <Predicate = true> <Delay = 1.23> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 5> <Depth = 4> <ROM>
ST_5 : Operation 89 [1/1] (0.78ns)   --->   "%m_1 = add i6 %m, -1" [os_pfb.cpp:21]   --->   Operation 89 'add' 'm_1' <Predicate = true> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 1.23>
ST_6 : Operation 90 [1/1] (0.00ns)   --->   "%p_r_M_imag = phi float [ %filter_state_M_imag_4, %2 ], [ %in_M_imag_load8, %1 ]" [os_pfb.cpp:29]   --->   Operation 90 'phi' 'p_r_M_imag' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 91 [1/1] (0.00ns)   --->   "%p_r_M_real = phi float [ %filter_state_M_real_4, %2 ], [ %in_M_real_load4, %1 ]" [os_pfb.cpp:29]   --->   Operation 91 'phi' 'p_r_M_real' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 92 [1/2] (1.23ns)   --->   "%h_load = load float* %h_addr, align 4" [os_pfb.cpp:31]   --->   Operation 92 'load' 'h_load' <Predicate = true> <Delay = 1.23> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 5> <Depth = 4> <ROM>

State 7 <SV = 6> <Delay = 8.41>
ST_7 : Operation 93 [2/2] (8.41ns)   --->   "%tmp_i_i = fmul float %p_r_M_real, %h_load" [os_pfb.cpp:31]   --->   Operation 93 'fmul' 'tmp_i_i' <Predicate = true> <Delay = 8.41> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 1> <II = 1> <Delay = 8.41> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 94 [2/2] (8.41ns)   --->   "%tmp_2_i_i = fmul float %p_r_M_imag, 0.000000e+00" [os_pfb.cpp:31]   --->   Operation 94 'fmul' 'tmp_2_i_i' <Predicate = true> <Delay = 8.41> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 1> <II = 1> <Delay = 8.41> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 95 [2/2] (8.41ns)   --->   "%tmp_4_i_i = fmul float %p_r_M_imag, %h_load" [os_pfb.cpp:31]   --->   Operation 95 'fmul' 'tmp_4_i_i' <Predicate = true> <Delay = 8.41> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 1> <II = 1> <Delay = 8.41> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 96 [2/2] (8.41ns)   --->   "%tmp_5_i_i = fmul float %p_r_M_real, 0.000000e+00" [os_pfb.cpp:31]   --->   Operation 96 'fmul' 'tmp_5_i_i' <Predicate = true> <Delay = 8.41> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 1> <II = 1> <Delay = 8.41> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 8.41>
ST_8 : Operation 97 [1/2] (8.41ns)   --->   "%tmp_i_i = fmul float %p_r_M_real, %h_load" [os_pfb.cpp:31]   --->   Operation 97 'fmul' 'tmp_i_i' <Predicate = true> <Delay = 8.41> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 1> <II = 1> <Delay = 8.41> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 98 [1/2] (8.41ns)   --->   "%tmp_2_i_i = fmul float %p_r_M_imag, 0.000000e+00" [os_pfb.cpp:31]   --->   Operation 98 'fmul' 'tmp_2_i_i' <Predicate = true> <Delay = 8.41> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 1> <II = 1> <Delay = 8.41> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 99 [1/2] (8.41ns)   --->   "%tmp_4_i_i = fmul float %p_r_M_imag, %h_load" [os_pfb.cpp:31]   --->   Operation 99 'fmul' 'tmp_4_i_i' <Predicate = true> <Delay = 8.41> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 1> <II = 1> <Delay = 8.41> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 100 [1/2] (8.41ns)   --->   "%tmp_5_i_i = fmul float %p_r_M_real, 0.000000e+00" [os_pfb.cpp:31]   --->   Operation 100 'fmul' 'tmp_5_i_i' <Predicate = true> <Delay = 8.41> <Core = "FMul">   --->   Core 105 'FMul' <Latency = 1> <II = 1> <Delay = 8.41> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.43>
ST_9 : Operation 101 [4/4] (6.43ns)   --->   "%complex_M_real_writ = fsub float %tmp_i_i, %tmp_2_i_i" [os_pfb.cpp:31]   --->   Operation 101 'fsub' 'complex_M_real_writ' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 102 [4/4] (6.43ns)   --->   "%complex_M_imag_writ = fadd float %tmp_4_i_i, %tmp_5_i_i" [os_pfb.cpp:31]   --->   Operation 102 'fadd' 'complex_M_imag_writ' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 6.43>
ST_10 : Operation 103 [3/4] (6.43ns)   --->   "%complex_M_real_writ = fsub float %tmp_i_i, %tmp_2_i_i" [os_pfb.cpp:31]   --->   Operation 103 'fsub' 'complex_M_real_writ' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 104 [3/4] (6.43ns)   --->   "%complex_M_imag_writ = fadd float %tmp_4_i_i, %tmp_5_i_i" [os_pfb.cpp:31]   --->   Operation 104 'fadd' 'complex_M_imag_writ' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 6.43>
ST_11 : Operation 105 [2/4] (6.43ns)   --->   "%complex_M_real_writ = fsub float %tmp_i_i, %tmp_2_i_i" [os_pfb.cpp:31]   --->   Operation 105 'fsub' 'complex_M_real_writ' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 106 [2/4] (6.43ns)   --->   "%complex_M_imag_writ = fadd float %tmp_4_i_i, %tmp_5_i_i" [os_pfb.cpp:31]   --->   Operation 106 'fadd' 'complex_M_imag_writ' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 6.43>
ST_12 : Operation 107 [1/4] (6.43ns)   --->   "%complex_M_real_writ = fsub float %tmp_i_i, %tmp_2_i_i" [os_pfb.cpp:31]   --->   Operation 107 'fsub' 'complex_M_real_writ' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 108 [1/4] (6.43ns)   --->   "%complex_M_imag_writ = fadd float %tmp_4_i_i, %tmp_5_i_i" [os_pfb.cpp:31]   --->   Operation 108 'fadd' 'complex_M_imag_writ' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 109 [2/2] (1.23ns)   --->   "%p_r_M_real_1 = load float* %temp_M_real_addr_2, align 4" [os_pfb.cpp:31]   --->   Operation 109 'load' 'p_r_M_real_1' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_12 : Operation 110 [2/2] (1.23ns)   --->   "%p_r_M_imag_1 = load float* %temp_M_imag_addr_2, align 4" [os_pfb.cpp:31]   --->   Operation 110 'load' 'p_r_M_imag_1' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 13 <SV = 12> <Delay = 7.67>
ST_13 : Operation 111 [1/2] (1.23ns)   --->   "%p_r_M_real_1 = load float* %temp_M_real_addr_2, align 4" [os_pfb.cpp:31]   --->   Operation 111 'load' 'p_r_M_real_1' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_13 : Operation 112 [1/2] (1.23ns)   --->   "%p_r_M_imag_1 = load float* %temp_M_imag_addr_2, align 4" [os_pfb.cpp:31]   --->   Operation 112 'load' 'p_r_M_imag_1' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_13 : Operation 113 [4/4] (6.43ns)   --->   "%complex_M_real_writ_1 = fadd float %p_r_M_real_1, %complex_M_real_writ" [os_pfb.cpp:31]   --->   Operation 113 'fadd' 'complex_M_real_writ_1' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 114 [4/4] (6.43ns)   --->   "%complex_M_imag_writ_1 = fadd float %p_r_M_imag_1, %complex_M_imag_writ" [os_pfb.cpp:31]   --->   Operation 114 'fadd' 'complex_M_imag_writ_1' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.43>
ST_14 : Operation 115 [3/4] (6.43ns)   --->   "%complex_M_real_writ_1 = fadd float %p_r_M_real_1, %complex_M_real_writ" [os_pfb.cpp:31]   --->   Operation 115 'fadd' 'complex_M_real_writ_1' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 116 [3/4] (6.43ns)   --->   "%complex_M_imag_writ_1 = fadd float %p_r_M_imag_1, %complex_M_imag_writ" [os_pfb.cpp:31]   --->   Operation 116 'fadd' 'complex_M_imag_writ_1' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 6.43>
ST_15 : Operation 117 [2/4] (6.43ns)   --->   "%complex_M_real_writ_1 = fadd float %p_r_M_real_1, %complex_M_real_writ" [os_pfb.cpp:31]   --->   Operation 117 'fadd' 'complex_M_real_writ_1' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 118 [2/4] (6.43ns)   --->   "%complex_M_imag_writ_1 = fadd float %p_r_M_imag_1, %complex_M_imag_writ" [os_pfb.cpp:31]   --->   Operation 118 'fadd' 'complex_M_imag_writ_1' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 7.67>
ST_16 : Operation 119 [1/4] (6.43ns)   --->   "%complex_M_real_writ_1 = fadd float %p_r_M_real_1, %complex_M_real_writ" [os_pfb.cpp:31]   --->   Operation 119 'fadd' 'complex_M_real_writ_1' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 120 [1/4] (6.43ns)   --->   "%complex_M_imag_writ_1 = fadd float %p_r_M_imag_1, %complex_M_imag_writ" [os_pfb.cpp:31]   --->   Operation 120 'fadd' 'complex_M_imag_writ_1' <Predicate = true> <Delay = 6.43> <Core = "FAddSub">   --->   Core 104 'FAddSub' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 121 [1/1] (1.23ns)   --->   "store float %complex_M_real_writ_1, float* %temp_M_real_addr_2, align 8" [os_pfb.cpp:31]   --->   Operation 121 'store' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_16 : Operation 122 [1/1] (1.23ns)   --->   "store float %complex_M_imag_writ_1, float* %temp_M_imag_addr_2, align 4" [os_pfb.cpp:31]   --->   Operation 122 'store' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_16 : Operation 123 [1/1] (0.00ns)   --->   "br label %.preheader" [os_pfb.cpp:21]   --->   Operation 123 'br' <Predicate = true> <Delay = 0.00>

State 17 <SV = 3> <Delay = 1.23>
ST_17 : Operation 124 [1/2] (1.23ns)   --->   "%shift = load i5* %shift_states_addr, align 1" [os_pfb.cpp:36]   --->   Operation 124 'load' 'shift' <Predicate = true> <Delay = 1.23> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 5> <Depth = 4> <ROM>
ST_17 : Operation 125 [1/1] (0.65ns)   --->   "br label %6" [os_pfb.cpp:38]   --->   Operation 125 'br' <Predicate = true> <Delay = 0.65>

State 18 <SV = 4> <Delay = 2.02>
ST_18 : Operation 126 [1/1] (0.00ns)   --->   "%i = phi i6 [ 0, %5 ], [ %i_1, %7 ]"   --->   Operation 126 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 127 [1/1] (0.78ns)   --->   "%exitcond = icmp eq i6 %i, -32" [os_pfb.cpp:38]   --->   Operation 127 'icmp' 'exitcond' <Predicate = true> <Delay = 0.78> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 128 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 32, i64 32, i64 32)"   --->   Operation 128 'speclooptripcount' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 129 [1/1] (0.78ns)   --->   "%i_1 = add i6 %i, 1" [os_pfb.cpp:38]   --->   Operation 129 'add' 'i_1' <Predicate = true> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 130 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %8, label %7" [os_pfb.cpp:38]   --->   Operation 130 'br' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 131 [1/1] (0.00ns)   --->   "%tmp_20 = trunc i6 %i to i5" [os_pfb.cpp:38]   --->   Operation 131 'trunc' 'tmp_20' <Predicate = (!exitcond)> <Delay = 0.00>
ST_18 : Operation 132 [1/1] (0.78ns)   --->   "%tmpidx = sub i5 %tmp_20, %shift" [os_pfb.cpp:39]   --->   Operation 132 'sub' 'tmpidx' <Predicate = (!exitcond)> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 133 [1/1] (0.00ns)   --->   "%tmp_12 = zext i5 %tmpidx to i64" [os_pfb.cpp:40]   --->   Operation 133 'zext' 'tmp_12' <Predicate = (!exitcond)> <Delay = 0.00>
ST_18 : Operation 134 [1/1] (0.00ns)   --->   "%temp_M_real_addr_1 = getelementptr [32 x float]* %temp_M_real, i64 0, i64 %tmp_12" [os_pfb.cpp:40]   --->   Operation 134 'getelementptr' 'temp_M_real_addr_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_18 : Operation 135 [2/2] (1.23ns)   --->   "%temp_M_real_load = load float* %temp_M_real_addr_1, align 8" [os_pfb.cpp:40]   --->   Operation 135 'load' 'temp_M_real_load' <Predicate = (!exitcond)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_18 : Operation 136 [1/1] (0.00ns)   --->   "%temp_M_imag_addr_1 = getelementptr [32 x float]* %temp_M_imag, i64 0, i64 %tmp_12" [os_pfb.cpp:40]   --->   Operation 136 'getelementptr' 'temp_M_imag_addr_1' <Predicate = (!exitcond)> <Delay = 0.00>
ST_18 : Operation 137 [2/2] (1.23ns)   --->   "%temp_M_imag_load = load float* %temp_M_imag_addr_1, align 4" [os_pfb.cpp:40]   --->   Operation 137 'load' 'temp_M_imag_load' <Predicate = (!exitcond)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_18 : Operation 138 [1/1] (0.79ns)   --->   "%tmp_10 = add i4 1, %state_idx_load" [os_pfb.cpp:42]   --->   Operation 138 'add' 'tmp_10' <Predicate = (exitcond)> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 139 [1/1] (0.00ns)   --->   "%tmp_16 = call i1 @_ssdm_op_BitSelect.i1.i4.i32(i4 %tmp_10, i32 3)" [os_pfb.cpp:42]   --->   Operation 139 'bitselect' 'tmp_16' <Predicate = (exitcond)> <Delay = 0.00>
ST_18 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_17 = trunc i4 %tmp_10 to i2" [os_pfb.cpp:42]   --->   Operation 140 'trunc' 'tmp_17' <Predicate = (exitcond)> <Delay = 0.00>
ST_18 : Operation 141 [1/1] (0.00ns)   --->   "%p_and_f = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 0, i2 %tmp_17)" [os_pfb.cpp:42]   --->   Operation 141 'bitconcatenate' 'p_and_f' <Predicate = (exitcond)> <Delay = 0.00>
ST_18 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node p_neg_t)   --->   "%tmp_18 = trunc i4 %state_idx_load to i2" [os_pfb.cpp:42]   --->   Operation 142 'trunc' 'tmp_18' <Predicate = (exitcond)> <Delay = 0.00>
ST_18 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node p_neg_t)   --->   "%tmp_19 = xor i2 %tmp_18, -1" [os_pfb.cpp:42]   --->   Operation 143 'xor' 'tmp_19' <Predicate = (exitcond)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node p_neg_t)   --->   "%p_and_t = call i4 @_ssdm_op_BitConcatenate.i4.i2.i2(i2 0, i2 %tmp_19)" [os_pfb.cpp:42]   --->   Operation 144 'bitconcatenate' 'p_and_t' <Predicate = (exitcond)> <Delay = 0.00>
ST_18 : Operation 145 [1/1] (0.79ns) (out node of the LUT)   --->   "%p_neg_t = sub i4 0, %p_and_t" [os_pfb.cpp:42]   --->   Operation 145 'sub' 'p_neg_t' <Predicate = (exitcond)> <Delay = 0.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 146 [1/1] (0.39ns)   --->   "%tmp_11 = select i1 %tmp_16, i4 %p_neg_t, i4 %p_and_f" [os_pfb.cpp:42]   --->   Operation 146 'select' 'tmp_11' <Predicate = (exitcond)> <Delay = 0.39> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 147 [1/1] (0.00ns)   --->   "store i4 %tmp_11, i4* @state_idx, align 1" [os_pfb.cpp:42]   --->   Operation 147 'store' <Predicate = (exitcond)> <Delay = 0.00>
ST_18 : Operation 148 [1/1] (0.00ns)   --->   "ret void" [os_pfb.cpp:44]   --->   Operation 148 'ret' <Predicate = (exitcond)> <Delay = 0.00>

State 19 <SV = 5> <Delay = 3.07>
ST_19 : Operation 149 [1/2] (1.23ns)   --->   "%temp_M_real_load = load float* %temp_M_real_addr_1, align 8" [os_pfb.cpp:40]   --->   Operation 149 'load' 'temp_M_real_load' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_19 : Operation 150 [1/1] (0.00ns)   --->   "%temp_M_real_load_to = bitcast float %temp_M_real_load to i32" [os_pfb.cpp:40]   --->   Operation 150 'bitcast' 'temp_M_real_load_to' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 151 [1/2] (1.23ns)   --->   "%temp_M_imag_load = load float* %temp_M_imag_addr_1, align 4" [os_pfb.cpp:40]   --->   Operation 151 'load' 'temp_M_imag_load' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_19 : Operation 152 [1/1] (0.00ns)   --->   "%temp_M_imag_load_to = bitcast float %temp_M_imag_load to i32" [os_pfb.cpp:40]   --->   Operation 152 'bitcast' 'temp_M_imag_load_to' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 153 [1/1] (0.00ns)   --->   "%filter_out_M_imag_a = call i64 @_ssdm_op_BitConcatenate.i64.i32.i32(i32 %temp_M_imag_load_to, i32 %temp_M_real_load_to)" [os_pfb.cpp:40]   --->   Operation 153 'bitconcatenate' 'filter_out_M_imag_a' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 154 [1/1] (1.83ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.i64P(i64* %filter_out, i64 %filter_out_M_imag_a)" [os_pfb.cpp:40]   --->   Operation 154 'write' <Predicate = true> <Delay = 1.83> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 64> <Depth = 1> <FIFO>
ST_19 : Operation 155 [1/1] (0.00ns)   --->   "br label %6" [os_pfb.cpp:38]   --->   Operation 155 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.84ns
The critical path consists of the following:
	fifo write on port 'ifft_config_data_V' (/tools/Xilinx/Vivado/2018.3/common/technology/autopilot/hls_fft.h:268->os_pfb.cpp:14) [14]  (1.84 ns)

 <State 2>: 1.24ns
The critical path consists of the following:
	'phi' operation ('tmp_8', os_pfb.cpp:17) with incoming values : ('tmp_9', os_pfb.cpp:17) [17]  (0 ns)
	'getelementptr' operation ('temp_M_real_addr', os_pfb.cpp:17) [20]  (0 ns)
	'store' operation (os_pfb.cpp:17) of constant 0 on array 'temp._M_real', os_pfb.cpp:17 [21]  (1.24 ns)

 <State 3>: 1.24ns
The critical path consists of the following:
	'load' operation ('state_idx_load') on static variable 'state_idx' [99]  (0 ns)
	'getelementptr' operation ('shift_states_addr', os_pfb.cpp:36) [101]  (0 ns)
	'load' operation ('shift', os_pfb.cpp:36) on array 'shift_states' [102]  (1.24 ns)

 <State 4>: 2.77ns
The critical path consists of the following:
	'phi' operation ('m') with incoming values : ('m', os_pfb.cpp:21) [39]  (0 ns)
	'add' operation ('idx', os_pfb.cpp:22) [46]  (0.765 ns)
	'add' operation ('tmp_13', os_pfb.cpp:29) [51]  (0.765 ns)
	'getelementptr' operation ('filter_state_M_real_3', os_pfb.cpp:29) [54]  (0 ns)
	'load' operation ('filter_state_M_real_4', os_pfb.cpp:29) on array 'filter_state_M_real' [55]  (1.24 ns)

 <State 5>: 2.47ns
The critical path consists of the following:
	'load' operation ('filter_state_M_real_4', os_pfb.cpp:29) on array 'filter_state_M_real' [55]  (1.24 ns)
	'store' operation (os_pfb.cpp:29) of variable 'filter_state_M_real_4', os_pfb.cpp:29 on array 'filter_state_M_real' [56]  (1.24 ns)

 <State 6>: 1.24ns
The critical path consists of the following:
	'load' operation ('__x', os_pfb.cpp:31) on array 'h' [80]  (1.24 ns)

 <State 7>: 8.42ns
The critical path consists of the following:
	'fmul' operation ('tmp_i_i', os_pfb.cpp:31) [81]  (8.42 ns)

 <State 8>: 8.42ns
The critical path consists of the following:
	'fmul' operation ('tmp_i_i', os_pfb.cpp:31) [81]  (8.42 ns)

 <State 9>: 6.44ns
The critical path consists of the following:
	'fsub' operation ('complex<float>._M_real', os_pfb.cpp:31) [83]  (6.44 ns)

 <State 10>: 6.44ns
The critical path consists of the following:
	'fsub' operation ('complex<float>._M_real', os_pfb.cpp:31) [83]  (6.44 ns)

 <State 11>: 6.44ns
The critical path consists of the following:
	'fsub' operation ('complex<float>._M_real', os_pfb.cpp:31) [83]  (6.44 ns)

 <State 12>: 6.44ns
The critical path consists of the following:
	'fsub' operation ('complex<float>._M_real', os_pfb.cpp:31) [83]  (6.44 ns)

 <State 13>: 7.67ns
The critical path consists of the following:
	'load' operation ('__x._M_real', os_pfb.cpp:31) on array 'temp._M_real', os_pfb.cpp:17 [87]  (1.24 ns)
	'fadd' operation ('complex<float>._M_real', os_pfb.cpp:31) [89]  (6.44 ns)

 <State 14>: 6.44ns
The critical path consists of the following:
	'fadd' operation ('complex<float>._M_real', os_pfb.cpp:31) [89]  (6.44 ns)

 <State 15>: 6.44ns
The critical path consists of the following:
	'fadd' operation ('complex<float>._M_real', os_pfb.cpp:31) [89]  (6.44 ns)

 <State 16>: 7.67ns
The critical path consists of the following:
	'fadd' operation ('complex<float>._M_real', os_pfb.cpp:31) [89]  (6.44 ns)
	'store' operation (os_pfb.cpp:31) of variable 'complex<float>._M_real', os_pfb.cpp:31 on array 'temp._M_real', os_pfb.cpp:17 [91]  (1.24 ns)

 <State 17>: 1.24ns
The critical path consists of the following:
	'load' operation ('shift', os_pfb.cpp:36) on array 'shift_states' [102]  (1.24 ns)

 <State 18>: 2.03ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', os_pfb.cpp:38) [105]  (0 ns)
	'sub' operation ('tmpidx', os_pfb.cpp:39) [112]  (0.789 ns)
	'getelementptr' operation ('temp_M_real_addr_1', os_pfb.cpp:40) [114]  (0 ns)
	'load' operation ('temp_M_real_load', os_pfb.cpp:40) on array 'temp._M_real', os_pfb.cpp:17 [115]  (1.24 ns)

 <State 19>: 3.08ns
The critical path consists of the following:
	'load' operation ('temp_M_real_load', os_pfb.cpp:40) on array 'temp._M_real', os_pfb.cpp:17 [115]  (1.24 ns)
	fifo write on port 'filter_out' (os_pfb.cpp:40) [121]  (1.84 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
