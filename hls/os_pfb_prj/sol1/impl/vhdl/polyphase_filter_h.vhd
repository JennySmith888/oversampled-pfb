-- ==============================================================
-- File generated on Thu Oct 24 13:28:50 PDT 2019
-- Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
-- SW Build 2405991 on Thu Dec  6 23:36:41 MST 2018
-- IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
-- Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity polyphase_filter_h_rom is 
    generic(
             DWIDTH     : integer := 32; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 256
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of polyphase_filter_h_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "10110111000000011001001010100010", 
    1 => "10110111111011110011101110101000", 
    2 => "10111000011100011011100011101100", 
    3 => "10111000101110100110010101001101", 
    4 => "10111000111100010000011110100110", 
    5 => "10111001000001011101010001101011", 
    6 => "10111000111110000100000100101011", 
    7 => "10111000101001001100000010100010", 
    8 => "00100001000010101011001001100001", 
    9 => "00111001000000101010010000011011", 
    10 => "00111001100111011110001011111111", 
    11 => "00111010000010111110111111111101", 
    12 => "00111010010110000010100011100101", 
    13 => "00111010100110011011101110101000", 
    14 => "00111010110011100111110011111011", 
    15 => "00111011000001001100000111000110", 
    16 => "00111011001001001100100110100011", 
    17 => "00111011010001101000001110110010", 
    18 => "00111011011010001110101111100111", 
    19 => "00111011100001010110100000001001", 
    20 => "00111011100101010110101010100000", 
    21 => "00111011101000111011111111100011", 
    22 => "00111011101011111001110110111101", 
    23 => "00111011101110000011010000001110", 
    24 => "00111011101111001011000111100010", 
    25 => "00111011101111000100110010001100", 
    26 => "00111011101101100100011010111001", 
    27 => "00111011101010011111011100011111", 
    28 => "00111011100101101101000001100111", 
    29 => "00111011011110001100111011011110", 
    30 => "00111011001101001111010101101011", 
    31 => "00111010110000111101111001100111", 
    32 => "10100010110111011001101110101101", 
    33 => "10111010111000000100011011111101", 
    34 => "10111011011011010100111101111001", 
    35 => "10111011101110101110111100010100", 
    36 => "10111100000000011110101111110011", 
    37 => "10111100001010000000101101001100", 
    38 => "10111100010011110001001111001111", 
    39 => "10111100011101100010100101010010", 
    40 => "10111100100011100010110100011111", 
    41 => "10111100101000000101000100001110", 
    42 => "10111100101100001111011110111010", 
    43 => "10111100101111111001010001101011", 
    44 => "10111100110010111001100101011100", 
    45 => "10111100110101000111101110111000", 
    46 => "10111100110110011011011011110110", 
    47 => "10111100110110101100111111111010", 
    48 => "10111100110101110101100110000011", 
    49 => "10111100110011101111011010101000", 
    50 => "10111100110000010110000001010010", 
    51 => "10111100101011100110011001111011", 
    52 => "10111100100101011111001111110011", 
    53 => "10111100011100000010001100010011", 
    54 => "10111100001010011100111000110000", 
    55 => "10111011101100101111011010111000", 
    56 => "00100011100101000001001011101000", 
    57 => "00111011110000110001010000111100", 
    58 => "00111100010010011100011000011101", 
    59 => "00111100100110111000101101110111", 
    60 => "00111100110100111101000111011001", 
    61 => "00111101000001100101011011111100", 
    62 => "00111101001000101000000000101000", 
    63 => "00111101001111011100101100111101", 
    64 => "00111101010101111001011110010111", 
    65 => "00111101011011110100000001111010", 
    66 => "00111101100000100000111111110101", 
    67 => "00111101100010101100100100011100", 
    68 => "00111101100100010111110010010101", 
    69 => "00111101100101011101111111000011", 
    70 => "00111101100101111010111010001101", 
    71 => "00111101100101101010110011111000", 
    72 => "00111101100100101010100011111111", 
    73 => "00111101100010110111101111111111", 
    74 => "00111101100000010000110010011000", 
    75 => "00111101011001101001111101010110", 
    76 => "00111101010001001001001101111000", 
    77 => "00111101000111000001111110111100", 
    78 => "00111100110110110010000010000010", 
    79 => "00111100011001010101001011010110", 
    80 => "10100011111110110101100101010000", 
    81 => "10111100011101101110000010011101", 
    82 => "10111100111111011111100000011110", 
    83 => "10111101010000101101001111010101", 
    84 => "10111101100001000001010100010000", 
    85 => "10111101101001101110011101000101", 
    86 => "10111101110010010011110011001101", 
    87 => "10111101111010100110100001101110", 
    88 => "10111110000001001101101100010110", 
    89 => "10111110000100110011011001011001", 
    90 => "10111110000111111110100011101110", 
    91 => "10111110001010101001010110000101", 
    92 => "10111110001100101110001000110011", 
    93 => "10111110001110000111011100100101", 
    94 => "10111110001110110000001010010011", 
    95 => "10111110001110100011100011111100", 
    96 => "10111110001101011101011101000101", 
    97 => "10111110001011011010001100111100", 
    98 => "10111110001000010110110110110001", 
    99 => "10111110000100010001001110000011", 
    100 => "10111101111110001111110001010000", 
    101 => "10111101110001110100100011100100", 
    102 => "10111101100011010001100010000010", 
    103 => "10111101000101010010011011011001", 
    104 => "00100100001001010101011100001011", 
    105 => "00111101001001000111101100001010", 
    106 => "00111101101010111010001101111010", 
    107 => "00111110000001011100100111100110", 
    108 => "00111110001110001010101010000110", 
    109 => "00111110011011100000101010000101", 
    110 => "00111110100100101011101010011101", 
    111 => "00111110101011110011010111100011", 
    112 => "00111110110011000011001101010001", 
    113 => "00111110111010010110101110011000", 
    114 => "00111111000000110100101010001000", 
    115 => "00111111000100011011001000011100", 
    116 => "00111111000111111100011001110110", 
    117 => "00111111001011010110000110100010", 
    118 => "00111111001110100101111010011010", 
    119 => "00111111010001101001100101010010", 
    120 => "00111111010100011110111110010101", 
    121 => "00111111010111000100000100110101", 
    122 => "00111111011001010111000011010110", 
    123 => "00111111011011010110001111111110", 
    124 => "00111111011101000000001111001101", 
    125 => "00111111011110010011110011101111", 
    126 => "00111111011111010000000000101110", 
    127 => "00111111011111110100001010001001", 
    128 => "00111111011111111111110110010011", 
    129 => "00111111011111110010111100000001", 
    130 => "00111111011111001101100101110011", 
    131 => "00111111011110010000001110111000", 
    132 => "00111111011100111011100100010111", 
    133 => "00111111011011010000100100101001", 
    134 => "00111111011001010000011101100100", 
    135 => "00111111010110111100101100011101", 
    136 => "00111111010100010110111011001110", 
    137 => "00111111010001100001000000111000", 
    138 => "00111111001110011100111110001001", 
    139 => "00111111001011001100111100011000", 
    140 => "00111111000111110011001011110000", 
    141 => "00111111000100010010000000111010", 
    142 => "00111111000000101011110011011000", 
    143 => "00111110111010000101110101010011", 
    144 => "00111110110010110011011010111101", 
    145 => "00111110101011100100111100110011", 
    146 => "00111110100100011110110111000000", 
    147 => "00111110011011001010101100111111", 
    148 => "00111110001101111000101011110100", 
    149 => "00111110000001001110111010111111", 
    150 => "00111101101010100111110001101000", 
    151 => "00111101001000110101001011010001", 
    152 => "00100100001001000001111110011010", 
    153 => "10111101000101000000000101110100", 
    154 => "10111101100010111111011100100111", 
    155 => "10111101110001011001111101100001", 
    156 => "10111101111101101101001100110001", 
    157 => "10111110000011111100010100000101", 
    158 => "10111110000111111110101110001110", 
    159 => "10111110001010111111010010001000", 
    160 => "10111110001101000000010001100100", 
    161 => "10111110001110000100101001010001", 
    162 => "10111110001110010000000011000101", 
    163 => "10111110001101100110101110100101", 
    164 => "10111110001100001101010111101001", 
    165 => "10111110001010001001000111100010", 
    166 => "10111110000111011111011001010101", 
    167 => "10111110000100010101110101110000", 
    168 => "10111110000000110010001101111001", 
    169 => "10111101111001110100100111110001", 
    170 => "10111101110001100111101110000111", 
    171 => "10111101101001001000110110011001", 
    172 => "10111101100000100010101101111100", 
    173 => "10111101001111111110110110100110", 
    174 => "10111100111110100001011000010001", 
    175 => "10111100011100110000000000111101", 
    176 => "10100101011111110001101000110010", 
    177 => "00111100011000011000011101101111", 
    178 => "00111100110101110110011111000110", 
    179 => "00111101000110010110011100101010", 
    180 => "00111101010000010000111111100101", 
    181 => "00111101011000100110010011100101", 
    182 => "00111101011111010011111100001011", 
    183 => "00111101100010001100101111000100", 
    184 => "00111101100011111100001100101111", 
    185 => "00111101100100111001111111010101", 
    186 => "00111101100101001000100010101011", 
    187 => "00111101100100101010111111010000", 
    188 => "00111101100011100101000011111100", 
    189 => "00111101100001111010111111101010", 
    190 => "00111101011111100010110011000001", 
    191 => "00111101011010011010010100110000", 
    192 => "00111101010100100110101010011011", 
    193 => "00111101001110010010000001001000", 
    194 => "00111101000111100110100000011011", 
    195 => "00111101000000101101111101000011", 
    196 => "00111100110011100011011111010001", 
    197 => "00111100100101110101010010110000", 
    198 => "00111100010001000010110000010100", 
    199 => "00111011101111011000011110100000", 
    200 => "00100100110100011011010011101101", 
    201 => "10111011101011011001111000001000", 
    202 => "10111100001001001001101101010101", 
    203 => "10111100011010001001100101000111", 
    204 => "10111100100100010010000001001110", 
    205 => "10111100101010001010010010011010", 
    206 => "10111100101110101101010001000111", 
    207 => "10111100110001111100011010011110", 
    208 => "10111100110011111010110010110001", 
    209 => "10111100110100101100111100010000", 
    210 => "10111100110100011000101000000001", 
    211 => "10111100110011000100100111110000", 
    212 => "10111100110000111000100010000000", 
    213 => "10111100101101111100011110111000", 
    214 => "10111100101010011000111111100111", 
    215 => "10111100100110010110101100001011", 
    216 => "10111100100001111110000110101100", 
    217 => "10111100011010101111000111100110", 
    218 => "10111100010001010101110000101011", 
    219 => "10111100000111111110101111000011", 
    220 => "10111011111101101110010101001111", 
    221 => "10111011101100010101001110110101", 
    222 => "10111011011000001011100100111110", 
    223 => "10111010110100111111110111101111", 
    224 => "10100011111100011100101111010110", 
    225 => "00111010101110000110011010111001", 
    226 => "00111011001010011111111000010110", 
    227 => "00111011011010010011000000000101", 
    228 => "00111011100011001111111011010111", 
    229 => "00111011100111100111101001111111", 
    230 => "00111011101010010111100101100001", 
    231 => "00111011101011101000100111101100", 
    232 => "00111011101011100101010000100110", 
    233 => "00111011101010011001001001001011", 
    234 => "00111011101000010000101000100110", 
    235 => "00111011100101011000010111001110", 
    236 => "00111011100001111100110110101010", 
    237 => "00111011011100010100010011010001", 
    238 => "00111011010100010110111110011111", 
    239 => "00111011001100010110000100110110", 
    240 => "00111011000100100011011001001110", 
    241 => "00111010111010011011100101000010", 
    242 => "00111010101101000010001010000111", 
    243 => "00111010100001001011101111100111", 
    244 => "00111010001110000110100111010000", 
    245 => "00111001111010110111000101001010", 
    246 => "00111001100000101001111100100100", 
    247 => "00111000110100111101011011110001", 
    248 => "00100010001110101000001100011000", 
    249 => "10111000011111000111011101010000", 
    250 => "10111000101101101000001001011111", 
    251 => "10111000101110011111101000001001", 
    252 => "10111000100110100101010000101011", 
    253 => "10111000010100011100010010011111", 
    254 => "10110111110101101110101011110110", 
    255 => "10110110111011110100010011011001" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity polyphase_filter_h is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 256;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of polyphase_filter_h is
    component polyphase_filter_h_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    polyphase_filter_h_rom_U :  component polyphase_filter_h_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


